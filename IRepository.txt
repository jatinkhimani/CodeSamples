using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Text;
using System.Threading.Tasks;

namespace RepositoryCore
{
    interface IRepository<TEntity> where TEntity : class
    {
        void Add(TEntity entity);
        void Delete(object id);
        TEntity Find(Expression<Func<TEntity, bool>> predicate);
        List<TEntity> FindAll(Expression<Func<TEntity, bool>> predicate);
        TEntity Get(object id);
        List<TEntity> GetAll();
        IQueryable<TEntity> SelectQuery(Expression<Func<TEntity, bool>> filter = null,
            Func<IQueryable<TEntity>, IOrderedQueryable<TEntity>> sort= null,
            params Expression<Func<TEntity, object>>[] includes);
        void Upadate(TEntity entity);
    }
}
